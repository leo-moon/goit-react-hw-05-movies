{"version":3,"file":"static/js/113.fcd646ee.chunk.js","mappings":"+PACA,EAAuB,wBAAvB,EAAoD,sB,SCyCpD,EApCiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BC,EAAAA,EAAAA,MAAnBC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,IAGpBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,kHAEQC,EAAAA,EAAAA,IAAeJ,EAAYC,GAFnC,gBAEPI,EAFO,EAEPA,KACRP,GAAQ,OAAIO,IAHG,gDAINC,EAJM,KAINA,SACTC,QAAQC,IAAIF,EAASG,MAAMC,SALZ,yDAAH,qDAQhBP,GACD,GAAE,CAACH,EAAYC,IAChBM,QAAQC,IAAIX,GACZ,IACMc,EAAWd,EAAKe,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACxB,gBAAaC,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXC,IALW,kCAKKJ,EAChBK,IAAI,WAEN,4BACE,wBAAKN,KACL,wBACGE,GAAS,qBAAmBA,UAT1Bd,EADe,IAe1B,OAAO,wBAAKU,GACb,C,uNCtCKS,EAAU,gCAGVC,EAAU,4CAQVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QACE,6FAQSC,EAAe,SAAEC,GAC5B,IACMC,EADW,kCACMD,EAEvB,OADAnB,QAAQC,IAAI,eAAgBmB,GACrBA,CACR,EAEYC,EAAiB,mCAAG,+GAAO5B,EAAP,+BAAoB,QAASC,EAA7B,uBACzB0B,EAAMP,EAAUpB,EAAa,IAAMC,EAAK,WAAaoB,EAD5B,SAERC,EAASO,IAAIF,EAAK,CACvCG,OAAQ,CACNC,SAAU,QACVC,KAAM,KALqB,uBAEvBnC,EAFuB,EAEvBA,KAMRU,QAAQC,IAAI,oBAAqBX,GARF,kBASxBA,GATwB,2CAAH,qDAYjBO,EAAc,mCAAG,+GAAOJ,EAAP,+BAAoB,QAASC,EAA7B,uBACtB0B,EAAMP,EAAUpB,EAAa,IAAMC,EAAK,WAAaoB,EAD/B,SAELC,EAASO,IAAIF,EAAK,CACvCG,OAAQ,CACNC,SAAU,WAJc,uBAEpBlC,EAFoB,EAEpBA,KAKRU,QAAQC,IAAI,aAAcX,GAPE,kBAQrBA,GARqB,2CAAH,qDAWdoC,EAAa,mCAAG,WAAOC,EAAQlC,GAAf,gFACrB2B,EAAMP,EAAU,UAAYpB,EAAaqB,EAC/Cd,QAAQC,IAAI,gBAAiBmB,GAFF,SAGRL,EAASO,IAAIF,EAAK,CACnCG,OAAQ,CACNC,SAAU,QACVI,MAAOD,KANgB,cAGrBrC,EAHqB,OAS3BU,QAAQC,IAAI,gBAAiBX,GATF,kBAUpBA,GAVoB,2CAAH,wDAqBbuC,EAAc,mCAAG,6GAAOpC,EAAP,+BAAoB,QAASC,EAA7B,uBACtB0B,EAAMP,EAAUpB,EAAa,IAAMC,EAAKoB,EADlB,SAETC,EAASO,IAAIF,EAAK,CACnCG,OAAQ,CACNC,SAAU,WAJc,cAEtBlC,EAFsB,yBAOrBA,GAPqB,2CAAH,qDAUdwC,EAAc,mCAAG,oGACTf,EAASO,IA5E5B,4FA2E4B,cACtBhC,EADsB,yBAErBA,GAFqB,2CAAH,oD","sources":["webpack://react-homework-template/./src/pages/CastPage/casr-page.module.css?5768","pages/CastPage/CastPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"casr-page_cast__VlOZ0\",\"li\":\"casr-page_li__FTUXH\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { searchCastById } from '../../shared/services/movies-api';\nimport styles from './casr-page.module.css';\n\nconst CastPage = () => {\n  const [data, setData] = useState([]);\n  const { media_type, id } = useParams();\n  // console.log('CastPage', params)\n\n  useEffect(() => {\n    const searchCast = async () => {\n      try {\n        const { cast } = await searchCastById(media_type, id);\n        setData([...cast]);\n      } catch ({ response }) {\n        console.log(response.error.message);\n      }\n    };\n    searchCast();\n  }, [media_type, id]);\n  console.log(data);\n  const basicUrl = 'https://image.tmdb.org/t/p/w500';\n  const elements = data.map(({ id, name, profile_path, character }) => (\n    <li key={id} className={styles.li}>\n      <img\n        className={styles.cast}\n        src={basicUrl + profile_path}\n        alt=\"actor\"\n      />\n      <div>\n        <h3>{name}</h3>\n        <h4>\n          {character  && `Character: ${character}`}\n        </h4>\n      </div>\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst mainURL = 'https://api.themoviedb.org/3/';\n// const media_type_values = ['all', 'movie', 'TV', 'person'];\n// const time_window_values = ['day', 'week'];\nconst api_KEY = '?api_key=1a6a0e252669dea132492bf96fa96565';\n// const media_type = media_type_values[1];\n// const time_window = time_window_values[0];\nconst trendingURL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=1a6a0e252669dea132492bf96fa96565';\n// const trendingURL =\n//   'https://api.themoviedb.org/3/search/movie?api_key=1a6a0e252669dea132492bf96fa96565&query=bat';\n\nconst instance = axios.create({\n  baseURL:\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=1a6a0e252669dea132492bf96fa96565',\n  // params: {\n  //   image_type: 'photo',\n  //   orientation: 'horizontal',\n  // },\n});\n\n// /kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nexport const makeImageUrl = ( poster_path ) => {\n  const basicUrl = 'https://image.tmdb.org/t/p/w500';\n  const url = basicUrl + poster_path;\n  console.log('makeImageUrl', url)\n  return url;\n};\n\nexport const searchReviewsById = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + '/reviews' + api_KEY;\n  const { data } = await instance.get(url, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  console.log('searchReviewsById', data);\n  return data;\n};\n\nexport const searchCastById = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + '/credits' + api_KEY;\n  const { data } = await instance.get(url, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  console.log('searchCast', data);\n  return data;\n};\n\nexport const searchByTitle = async (search, media_type) => {\n  const url = mainURL + 'search/' + media_type + api_KEY;\n  console.log('searchByTitle', url);\n  const data = await instance.get(url, {\n    params: {\n      language: 'en-US',\n      query: search,\n    },\n  });\n  console.log('searchByTitle', data);\n  return data;\n};\n\nexport const poster = async (media_type, id, poster_path) => {\n  const url = mainURL + media_type + '/' + id + poster_path + api_KEY;\n  console.log('poster', url);\n  const data = await instance.get(url);\n  console.log('poster', data, url);\n  return data;\n};\n\nexport const searchByIdType = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + api_KEY;\n  const data = await instance.get(url, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const homePageMovies = async () => {\n  const data = await instance.get(trendingURL);\n  return data;\n};\n"],"names":["useState","data","setData","useParams","media_type","id","useEffect","searchCast","searchCastById","cast","response","console","log","error","message","elements","map","name","profile_path","character","className","styles","src","alt","mainURL","api_KEY","instance","axios","baseURL","makeImageUrl","poster_path","url","searchReviewsById","get","params","language","page","searchByTitle","search","query","searchByIdType","homePageMovies"],"sourceRoot":""}