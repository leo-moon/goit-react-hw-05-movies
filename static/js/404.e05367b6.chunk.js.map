{"version":3,"file":"static/js/404.e05367b6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/movie-details.module.css?13a9","pages/MovieDetails/MovieDetails.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"movie-details_div__GNwm-\",\"ul\":\"movie-details_ul__zS4W2\",\"li\":\"movie-details_li__zdDFe\"};","// import { useEffect, useState, useCallback } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\n// import Loader from './Loader/Loader';\n\nimport { searchByIdType, makeImageUrl } from '../../shared/services/movies-api';\nimport styles from './movie-details.module.css';\n\nconst SingleMoviePage = () => {\n  // const [loading, setLoading] = useState(false);\n  const [movieData, setMovieData] = useState();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from  = location.state?.from || '/' ;\n\n  const params = useParams();\n  // console.log('SingleMoviePage   location ', location);\n  // console.log('SingleMoviePage    from', from);\n  // console.log('SingleMoviePage  navigate, ', navigate);\n\n  const { media_type, id } = params;\n  useEffect(() => {\n    const fetchByIDType = async () => {\n      try {\n        //   setLoading(true);\n        const { data } = await searchByIdType(media_type, id);\n        setMovieData(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      } finally {\n        //   setLoading(false);\n      }\n    };\n    fetchByIDType();\n  }, [media_type, id]);\n\n  if (!movieData) {\n    return;\n  }\n\n  console.log('SingleMoviePage   movieData', movieData);\n  const { poster_path, release_date, first_air_date, vote_average, genres } =\n    movieData;\n\n  console.log('poster_path', poster_path);\n  const urlImage = makeImageUrl(poster_path);\n  const date = release_date\n    ? release_date.slice(0, 4)\n    : first_air_date.slice(0, 4);\n  // const title =\n\n  const popularityRound = Math.round(parseInt(vote_average * 10));\n\n  let genresArray = '';\n  genres.forEach(({ name }) => {\n    genresArray = genresArray + name + ' ';\n  });\n\n  const goBack = () => navigate(from);\n  // const goBack = useCallback(() => navigate(from), [navigate]);\n\n  return (\n    <>\n      <button onClick={goBack}>Go back</button>\n      <div className={styles.div}>\n        <img src={urlImage} alt=\"poster\" />\n        <div>\n          <h2>\n            {movieData?.title} ({date})\n          </h2>\n          {/* {movieData?.poster_path} */}\n          <p>User score: {popularityRound}%</p>\n          <h3>Overview</h3>\n          <p>{movieData?.overview}</p>\n          <h3>Genres</h3>\n          <p>{genresArray}</p>\n        </div>\n      </div>\n      <ul className={styles.ul}>\n        Additional information\n        <Link className={styles.li} to=\"cast\" state={{ from }}>\n          Cast\n        </Link>\n        <Link className={styles.li} to=\"reviews\" state={{ from }}>\n          Reviews\n        </Link>\n        <Outlet />\n      </ul>\n    </>\n  );\n};\n\nexport default SingleMoviePage;\n\n/*\nposter_path\n\n\n\n\nAdditional information\n\nCast\nReviews\n*/\n","import axios from 'axios';\n\nconst mainURL = 'https://api.themoviedb.org/3/';\n// const media_type_values = ['all', 'movie', 'TV', 'person'];\n// const time_window_values = ['day', 'week'];\nconst api_KEY = '?api_key=1a6a0e252669dea132492bf96fa96565';\n// const media_type = media_type_values[1];\n// const time_window = time_window_values[0];\nconst trendingURL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=1a6a0e252669dea132492bf96fa96565';\n// const trendingURL =\n//   'https://api.themoviedb.org/3/search/movie?api_key=1a6a0e252669dea132492bf96fa96565&query=bat';\n\nconst instance = axios.create({\n  baseURL:\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=1a6a0e252669dea132492bf96fa96565',\n  // params: {\n  //   image_type: 'photo',\n  //   orientation: 'horizontal',\n  // },\n});\n\n// /kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nexport const makeImageUrl = ( poster_path ) => {\n  const basicUrl = 'https://image.tmdb.org/t/p/w500';\n  const url = basicUrl + poster_path;\n  console.log('makeImageUrl', url)\n  return url;\n};\n\nexport const searchReviewsById = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + '/reviews' + api_KEY;\n  const { data } = await instance.get(url, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  console.log('searchReviewsById', data);\n  return data;\n};\n\nexport const searchCastById = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + '/credits' + api_KEY;\n  const { data } = await instance.get(url, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  console.log('searchCast', data);\n  return data;\n};\n\nexport const searchByTitle = async (search, media_type, page) => {\n  const url = mainURL + 'search/' + media_type + api_KEY;\n  console.log('searchByTitle', url);\n  const data = await instance.get(url, {\n    params: {\n      language: 'en-US',\n      query: search,\n      page: page\n    },\n  });\n  console.log('searchByTitle', data);\n  return data;\n};\n\nexport const poster = async (media_type, id, poster_path) => {\n  const url = mainURL + media_type + '/' + id + poster_path + api_KEY;\n  console.log('poster', url);\n  const data = await instance.get(url);\n  console.log('poster', data, url);\n  return data;\n};\n\nexport const searchByIdType = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + api_KEY;\n  const data = await instance.get(url, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const homePageMovies = async () => {\n  const data = await instance.get(trendingURL);\n  return data;\n};\n"],"names":["useState","movieData","setMovieData","navigate","useNavigate","from","useLocation","state","params","useParams","media_type","id","useEffect","fetchByIDType","searchByIdType","data","response","console","log","message","poster_path","release_date","first_air_date","vote_average","genres","urlImage","makeImageUrl","date","slice","popularityRound","Math","round","parseInt","genresArray","forEach","name","onClick","className","styles","src","alt","title","overview","to","mainURL","api_KEY","instance","axios","baseURL","url","searchReviewsById","get","language","page","searchCastById","searchByTitle","search","query","homePageMovies"],"sourceRoot":""}