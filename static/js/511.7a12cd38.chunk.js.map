{"version":3,"file":"static/js/511.7a12cd38.chunk.js","mappings":"+PACA,EAAqB,yB,SCyCrB,EAlCmB,WACjB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BC,EAAAA,EAAAA,MAAnBC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,IAGpBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,kHAEQC,EAAAA,EAAAA,IAAkBJ,EAAYC,GAFtC,gBAEVI,EAFU,EAEVA,QACRP,GAAQ,OAAIO,IAHM,gDAITC,EAJS,KAITA,SACTC,QAAQC,IAAIF,EAASG,MAAMC,SALT,yDAAH,qDAQnBP,GACD,GAAE,CAACH,EAAYC,IAChBM,QAAQC,IAAIX,GACZ,IAAMc,EAAWd,EAAKe,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAExB,2BACE,wBAAKD,KACL,uBAAIC,MAFGb,EAFe,IAQpBc,EAAUJ,EAASK,OACvBL,GAEA,sEAGF,OADAJ,QAAQC,IAAIO,IACL,eAAIE,UAAWC,EAAf,SAA2BH,GACnC,C,uNCtCKI,EAAU,gCAGVC,EAAU,4CAQVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QACE,6FAQSC,EAAe,SAAEC,GAC5B,IACMC,EADW,kCACMD,EAEvB,OADAlB,QAAQC,IAAI,eAAgBkB,GACrBA,CACR,EAEYtB,EAAiB,mCAAG,+GAAOJ,EAAP,+BAAoB,QAASC,EAA7B,uBACzByB,EAAMP,EAAUnB,EAAa,IAAMC,EAAK,WAAamB,EAD5B,SAERC,EAASM,IAAID,EAAK,CACvCE,OAAQ,CACNC,SAAU,QACVC,KAAM,KALqB,uBAEvBjC,EAFuB,EAEvBA,KAMRU,QAAQC,IAAI,oBAAqBX,GARF,kBASxBA,GATwB,2CAAH,qDAYjBkC,EAAc,mCAAG,+GAAO/B,EAAP,+BAAoB,QAASC,EAA7B,uBACtByB,EAAMP,EAAUnB,EAAa,IAAMC,EAAK,WAAamB,EAD/B,SAELC,EAASM,IAAID,EAAK,CACvCE,OAAQ,CACNC,SAAU,WAJc,uBAEpBhC,EAFoB,EAEpBA,KAKRU,QAAQC,IAAI,aAAcX,GAPE,kBAQrBA,GARqB,2CAAH,qDAWdmC,EAAa,mCAAG,WAAOC,EAAQjC,GAAf,gFACrB0B,EAAMP,EAAU,UAAYnB,EAAaoB,EAC/Cb,QAAQC,IAAI,gBAAiBkB,GAFF,SAGRL,EAASM,IAAID,EAAK,CACnCE,OAAQ,CACNC,SAAU,QACVK,MAAOD,KANgB,cAGrBpC,EAHqB,OAS3BU,QAAQC,IAAI,gBAAiBX,GATF,kBAUpBA,GAVoB,2CAAH,wDAqBbsC,EAAc,mCAAG,6GAAOnC,EAAP,+BAAoB,QAASC,EAA7B,uBACtByB,EAAMP,EAAUnB,EAAa,IAAMC,EAAKmB,EADlB,SAETC,EAASM,IAAID,EAAK,CACnCE,OAAQ,CACNC,SAAU,WAJc,cAEtBhC,EAFsB,yBAOrBA,GAPqB,2CAAH,qDAUduC,EAAc,mCAAG,oGACTf,EAASM,IA5E5B,4FA2E4B,cACtB9B,EADsB,yBAErBA,GAFqB,2CAAH,oD","sources":["webpack://react-homework-template/./src/pages/ReviewsPage/reviews-page.module.css?0ad5","pages/ReviewsPage/ReviewsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"reviews-page_ul__gohaK\"};","import { useState, useEffect } from 'react';\n// import { useParams, Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nimport { searchReviewsById } from '../../shared/services/movies-api';\n\nimport styles from './reviews-page.module.css';\n\nconst ReviewPage = () => {\n  const [data, setData] = useState([]);\n  const { media_type, id } = useParams();\n  // console.log('ReviewsPage', params)\n\n  useEffect(() => {\n    const searchReviews = async () => {\n      try {\n        const { results } = await searchReviewsById(media_type, id);\n        setData([...results]);\n      } catch ({ response }) {\n        console.log(response.error.message);\n      }\n    };\n    searchReviews();\n  }, [media_type, id]);\n  console.log(data);\n  const elements = data.map(({ id, author, content }) => (\n    // <Link>\n    <li key={id}>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n    // </Link>\n  ));\n  const reviews = elements.length ? (\n    elements\n  ) : (\n    <h3>We don't have any reviews for this movie.</h3>\n  );\n  console.log(reviews);\n  return <ul className={styles.ul}>{reviews}</ul>;\n};\n\nexport default ReviewPage;\n","import axios from 'axios';\n\nconst mainURL = 'https://api.themoviedb.org/3/';\n// const media_type_values = ['all', 'movie', 'TV', 'person'];\n// const time_window_values = ['day', 'week'];\nconst api_KEY = '?api_key=1a6a0e252669dea132492bf96fa96565';\n// const media_type = media_type_values[1];\n// const time_window = time_window_values[0];\nconst trendingURL =\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=1a6a0e252669dea132492bf96fa96565';\n// const trendingURL =\n//   'https://api.themoviedb.org/3/search/movie?api_key=1a6a0e252669dea132492bf96fa96565&query=bat';\n\nconst instance = axios.create({\n  baseURL:\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=1a6a0e252669dea132492bf96fa96565',\n  // params: {\n  //   image_type: 'photo',\n  //   orientation: 'horizontal',\n  // },\n});\n\n// /kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nexport const makeImageUrl = ( poster_path ) => {\n  const basicUrl = 'https://image.tmdb.org/t/p/w500';\n  const url = basicUrl + poster_path;\n  console.log('makeImageUrl', url)\n  return url;\n};\n\nexport const searchReviewsById = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + '/reviews' + api_KEY;\n  const { data } = await instance.get(url, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  console.log('searchReviewsById', data);\n  return data;\n};\n\nexport const searchCastById = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + '/credits' + api_KEY;\n  const { data } = await instance.get(url, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  console.log('searchCast', data);\n  return data;\n};\n\nexport const searchByTitle = async (search, media_type) => {\n  const url = mainURL + 'search/' + media_type + api_KEY;\n  console.log('searchByTitle', url);\n  const data = await instance.get(url, {\n    params: {\n      language: 'en-US',\n      query: search,\n    },\n  });\n  console.log('searchByTitle', data);\n  return data;\n};\n\nexport const poster = async (media_type, id, poster_path) => {\n  const url = mainURL + media_type + '/' + id + poster_path + api_KEY;\n  console.log('poster', url);\n  const data = await instance.get(url);\n  console.log('poster', data, url);\n  return data;\n};\n\nexport const searchByIdType = async (media_type = 'movie', id) => {\n  const url = mainURL + media_type + '/' + id + api_KEY;\n  const data = await instance.get(url, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const homePageMovies = async () => {\n  const data = await instance.get(trendingURL);\n  return data;\n};\n"],"names":["useState","data","setData","useParams","media_type","id","useEffect","searchReviews","searchReviewsById","results","response","console","log","error","message","elements","map","author","content","reviews","length","className","styles","mainURL","api_KEY","instance","axios","baseURL","makeImageUrl","poster_path","url","get","params","language","page","searchCastById","searchByTitle","search","query","searchByIdType","homePageMovies"],"sourceRoot":""}